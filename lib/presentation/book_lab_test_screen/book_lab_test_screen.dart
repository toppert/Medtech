import '../book_lab_test_screen/widgets/thyroidfunction_item_widget.dart';import 'controller/book_lab_test_controller.dart';import 'models/thyroidfunction_item_model.dart';import 'package:flutter/material.dart';import 'package:medtech/core/app_export.dart';import 'package:medtech/widgets/app_bar/appbar_image.dart';import 'package:medtech/widgets/app_bar/appbar_title.dart';import 'package:medtech/widgets/app_bar/custom_app_bar.dart';import 'package:medtech/widgets/custom_elevated_button.dart';import 'package:medtech/widgets/custom_icon_button.dart';import 'package:medtech/widgets/custom_search_view.dart';class BookLabTestScreen extends GetWidget<BookLabTestController> {const BookLabTestScreen({Key? key}) : super(key: key);

@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, body: SizedBox(width: double.maxFinite, child: Column(children: [Container(padding: EdgeInsets.symmetric(vertical: 17.v), decoration: AppDecoration.fillPrimaryContainer, child: Column(mainAxisAlignment: MainAxisAlignment.end, children: [SizedBox(height: 19.v), CustomAppBar(leadingWidth: 43.h, leading: AppbarImage(svgPath: ImageConstant.imgArrowleftOnprimarycontainer, margin: EdgeInsets.only(left: 19.h, top: 3.v, bottom: 1.v), onTap: () {onTapArrowleftone();}), title: AppbarTitle(text: "lbl_book_lab_test".tr, margin: EdgeInsets.only(left: 35.h)))])), Expanded(child: SizedBox(width: double.maxFinite, child: Container(padding: EdgeInsets.symmetric(horizontal: 19.h, vertical: 20.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomSearchView(controller: controller.searchController, hintText: "lbl_search_tests".tr, prefix: Container(margin: EdgeInsets.all(15.h), child: CustomImageView(svgPath: ImageConstant.imgSearch)), prefixConstraints: BoxConstraints(maxHeight: 50.v), suffix: Container(margin: EdgeInsets.fromLTRB(30.h, 6.v, 20.h, 11.v), child: CustomImageView(svgPath: ImageConstant.imgFilteroptionspreferencessettingssvgrepocom11)), suffixConstraints: BoxConstraints(maxHeight: 50.v)), SizedBox(height: 21.v), Text("msg_frequently_booked".tr, style: CustomTextStyles.titleMediumSemiBold_1), SizedBox(height: 8.v), Container(padding: EdgeInsets.symmetric(horizontal: 15.h, vertical: 13.v), decoration: AppDecoration.fillGray100.copyWith(borderRadius: BorderRadiusStyle.roundedBorder8), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: EdgeInsets.only(top: 2.v, bottom: 3.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("msg_fasting_blood_sugar".tr, style: theme.textTheme.titleMedium), SizedBox(height: 9.v), RichText(text: TextSpan(children: [TextSpan(text: "lbl_reports_within".tr, style: CustomTextStyles.bodyMediumGray600), TextSpan(text: " "), TextSpan(text: "lbl_9_hours".tr, style: theme.textTheme.titleSmall)]), textAlign: TextAlign.left)])), Padding(padding: EdgeInsets.only(top: 1.v), child: Column(crossAxisAlignment: CrossAxisAlignment.end, children: [CustomIconButton(height: 20.adaptSize, width: 20.adaptSize, padding: EdgeInsets.all(6.h), decoration: IconButtonStyleHelper.fillPrimaryTL3, child: CustomImageView(svgPath: ImageConstant.imgCheckmarkGray5001)), SizedBox(height: 11.v), Text("lbl_5_500".tr, style: CustomTextStyles.titleMediumSemiBold_3)]))])), SizedBox(height: 10.v), Container(padding: EdgeInsets.symmetric(horizontal: 15.h, vertical: 13.v), decoration: AppDecoration.fillGray100.copyWith(borderRadius: BorderRadiusStyle.roundedBorder8), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.center, children: [Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(top: 1.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("msg_complete_blood_count".tr, style: theme.textTheme.titleMedium), SizedBox(height: 9.v), RichText(text: TextSpan(children: [TextSpan(text: "lbl_reports_within".tr, style: CustomTextStyles.bodyMediumGray600), TextSpan(text: "lbl_6".tr, style: theme.textTheme.bodyMedium), TextSpan(text: "lbl_hours".tr, style: theme.textTheme.titleSmall)]), textAlign: TextAlign.left)])), CustomImageView(svgPath: ImageConstant.imgCheckmarkPrimary, height: 20.adaptSize, width: 20.adaptSize, margin: EdgeInsets.only(bottom: 26.v))]), SizedBox(height: 8.v), Divider(color: appTheme.indigo100), SizedBox(height: 8.v), Text("lbl_includes".tr, style: theme.textTheme.titleSmall), SizedBox(height: 10.v), Text("msg_red_blood_cell_count".tr, style: theme.textTheme.bodyMedium), SizedBox(height: 9.v), Text("msg_hb_haemoglobin".tr, style: theme.textTheme.bodyMedium), SizedBox(height: 9.v), Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: EdgeInsets.only(bottom: 2.v), child: RichText(text: TextSpan(children: [TextSpan(text: "lbl_haematocrit".tr, style: theme.textTheme.bodyMedium), TextSpan(text: "lbl_12_more_tests".tr, style: theme.textTheme.titleSmall)]), textAlign: TextAlign.left)), Text("lbl_25_500".tr, style: CustomTextStyles.titleMediumSemiBold_3)])])), SizedBox(height: 10.v), Expanded(child: Obx(() => ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: 10.v);}, itemCount: controller.bookLabTestModelObj.value.thyroidfunctionItemList.value.length, itemBuilder: (context, index) {ThyroidfunctionItemModel model = controller.bookLabTestModelObj.value.thyroidfunctionItemList.value[index]; return ThyroidfunctionItemWidget(model);}))), SizedBox(height: 19.v), Text("msg_2_items_selected".tr, style: CustomTextStyles.titleMediumBlueA400SemiBold), SizedBox(height: 5.v)]))))])), bottomNavigationBar: CustomElevatedButton(height: 52.v, text: "lbl_pay_31_000".tr, margin: EdgeInsets.only(left: 19.h, right: 19.h, bottom: 20.v), onTap: () {onTapPay31000();}))); } 
/// Navigates to the serviceOptionOneScreen when the action is triggered.

/// When the action is triggered, this function uses the [Get] package to
/// push the named route for the serviceOptionOneScreen.
onTapPay31000() { Get.toNamed(AppRoutes.serviceOptionOneScreen, ); } 


/// Navigates to the previous screen.
///
/// When the action is triggered, this function uses the [Get] package to 
/// navigate to the previous screen in the navigation stack.
onTapArrowleftone() { Get.back(); } 
 }
